<project xmlns="http://maven.apache.org/POM/4.0.0"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
	<modelVersion>4.0.0</modelVersion>

	<groupId>com.xdev-software</groupId>
	<artifactId>xapi-fx</artifactId>
	<version>6.0.3-${version.suffix}-SNAPSHOT</version>
	<packaging>jar</packaging>

	<name>XDEV Application Framework JavaFX</name>
	<description>XDEV Application Framework - the JavaFX part</description>
	<url>https://github.com/xdev-software/xapi-fx</url>

	<scm>
		<url>https://github.com/xdev-software/xapi-fx</url>
		<connection>https://github.com/xdev-software/xapi-fx.git</connection>
	</scm>

	<inceptionYear>2003</inceptionYear>

	<organization>
		<name>XDEV Software</name>
		<url>https://xdev-software.de</url>
	</organization>

	<developers>
		<developer>
			<name>XDEV Software</name>
			<organization>XDEV Software</organization>
			<url>https://www.xdev-software.de</url>
		</developer>
	</developers>

	<licenses>
		<license>
			<name>GNU Lesser General Public License version 3</name>
			<url>https://www.gnu.org/licenses/lgpl-3.0.en.html</url>
			<distribution>repo</distribution>
		</license>
	</licenses>

	<properties>
		<java.compiler.version>1.8</java.compiler.version>
		<project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
		<license.licenseName>lgpl_v3</license.licenseName>
		<maven.compiler.source>${java.compiler.version}</maven.compiler.source>
		<maven.compiler.target>${java.compiler.version}</maven.compiler.target>
	</properties>

	<repositories>
		<!-- The order of definitions matters. Explicitly defining central here 
			to make sure it has the highest priority. -->
		<repository>
			<id>central</id>
			<url>https://repo.maven.apache.org/maven2</url>
			<snapshots>
				<enabled>false</enabled>
			</snapshots>
		</repository>
	</repositories>

	<pluginRepositories>
		<!-- The order of definitions matters. Explicitly defining central here 
			to make sure it has the highest priority. -->
		<pluginRepository>
			<id>central</id>
			<url>https://repo.maven.apache.org/maven2</url>
			<snapshots>
				<enabled>false</enabled>
			</snapshots>
		</pluginRepository>
	</pluginRepositories>

	<build>
		<plugins>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-clean-plugin</artifactId>
				<version>3.1.0</version>
			</plugin>

			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-deploy-plugin</artifactId>
				<version>3.0.0-M2</version>
			</plugin>

			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-install-plugin</artifactId>
				<version>3.0.0-M1</version>
			</plugin>

			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-jar-plugin</artifactId>
				<version>3.2.2</version>
			</plugin>

			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-resources-plugin</artifactId>
				<version>3.2.0</version>
			</plugin>

			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-site-plugin</artifactId>
				<version>3.11.0</version>
			</plugin>

			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-surefire-plugin</artifactId>
				<version>3.0.0-M5</version>
			</plugin>

			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-assembly-plugin</artifactId>
				<version>3.3.0</version>
			</plugin>

			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-enforcer-plugin</artifactId>
				<version>3.0.0</version>
				<executions>
					<execution>
						<id>enforce-maven</id>
						<goals>
							<goal>enforce</goal>
						</goals>
						<configuration>
							<rules>
								<requireMavenVersion>
									<version>3.5.4</version>
								</requireMavenVersion>
								<requireJavaVersion>
									<version>${java.runtime.version}</version>
								</requireJavaVersion>
								<requireActiveProfile>
									<profiles>java8,java11,java17</profiles>
									<all>false</all>
								</requireActiveProfile>
							</rules>
						</configuration>
					</execution>
				</executions>
			</plugin>

			<plugin>
				<artifactId>maven-compiler-plugin</artifactId>
				<version>3.9.0</version>
				<configuration>
					<compilerId>eclipse</compilerId>
					<source>${java.compiler.version}</source>
					<target>${java.compiler.version}</target>
				</configuration>
				<dependencies>
					<dependency>
						<groupId>org.codehaus.plexus</groupId>
						<artifactId>plexus-compiler-eclipse</artifactId>
						<version>2.8.5</version>
					</dependency>
				</dependencies>
			</plugin>

			<plugin>
				<groupId>org.codehaus.mojo</groupId>
				<artifactId>license-maven-plugin</artifactId>
				<version>2.0.0</version>
				<executions>
					<execution>
						<id>first</id>
						<goals>
							<goal>update-file-header</goal>
						</goals>
						<phase>process-sources</phase>
					</execution>
				</executions>
			</plugin>

			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-javadoc-plugin</artifactId>
				<version>3.3.1</version>
				<executions>
					<execution>
						<id>attach-javadocs</id>
						<phase>verify</phase>
						<goals>
							<goal>jar</goal>
						</goals>
					</execution>
				</executions>
				<configuration>
					<quiet>true</quiet>
					<doclint>none</doclint>
				</configuration>
			</plugin>

			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-source-plugin</artifactId>
				<version>3.2.1</version>
				<executions>
					<execution>
						<id>attach-sources</id>
						<phase>verify</phase>
						<goals>
							<goal>jar-no-fork</goal>
						</goals>
					</execution>
				</executions>
			</plugin>

			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-checkstyle-plugin</artifactId>
				<version>3.1.2</version>

				<dependencies>
					<dependency>
						<groupId>com.puppycrawl.tools</groupId>
						<artifactId>checkstyle</artifactId>
						<version>8.45.1</version>
					</dependency>
				</dependencies>

				<configuration>
					<configLocation>checkstyle.xml</configLocation>
					<encoding>UTF-8</encoding>
					<consoleOutput>true</consoleOutput>
					<failsOnError>true</failsOnError>
					<linkXRef>false</linkXRef>
					<failOnViolation>true</failOnViolation>
				</configuration>
				<executions>
					<execution>
						<id>validate</id>
						<phase>validate</phase>
						<goals>
							<goal>check</goal>
						</goals>
					</execution>
				</executions>
			</plugin>

			<!--
				This is required for installing/deploying profiles with dependencies.
				Otherwise the dependencies are not resolved correctly in the implementing project
			 -->
			<plugin>
				<groupId>org.codehaus.mojo</groupId>
				<artifactId>flatten-maven-plugin</artifactId>
				<version>1.2.7</version>
				<configuration>
					<updatePomFile>true</updatePomFile>
					<!-- This does the magic -->
					<embedBuildProfileDependencies>true</embedBuildProfileDependencies>
					<flattenMode>ossrh</flattenMode>
				</configuration>
				<executions>
					<execution>
						<id>flatten</id>
						<phase>process-resources</phase>
						<goals>
							<goal>flatten</goal>
						</goals>
					</execution>
					<execution>
						<id>flatten.clean</id>
						<phase>clean</phase>
						<goals>
							<goal>clean</goal>
						</goals>
					</execution>
				</executions>
			</plugin>
		</plugins>
	</build>

	<!-- Do not make any profile active by default or it breaks the release!!! (versions:set) -->
	<profiles>

		<profile>
			<id>java8</id>
			<properties>
				<java.runtime.version>[1.8,9)</java.runtime.version>
				<version.suffix>java8</version.suffix>
			</properties>

			<dependencies>
				<!-- There are no JavaFX dependencies here, because with Java8 JavaFX 
					has to come with the JDK. There are no maven dependencies we can use. -->
			</dependencies>
		</profile>

		<profile>
			<id>java11</id>
			<properties>
				<java.runtime.version>[11,12)</java.runtime.version>
				<version.suffix>java11</version.suffix>
			</properties>

			<dependencies>
				<dependency>
					<groupId>org.openjfx</groupId>
					<artifactId>javafx-swing</artifactId>
					<version>11.0.2</version>
				</dependency>
				<dependency>
					<groupId>org.openjfx</groupId>
					<artifactId>javafx-web</artifactId>
					<version>11.0.2</version>
				</dependency>
			</dependencies>
		</profile>

		<profile>
			<id>java17</id>
			<properties>
				<java.runtime.version>[17,18)</java.runtime.version>
				<version.suffix>java17</version.suffix>
			</properties>

			<dependencies>
				<dependency>
					<groupId>org.openjfx</groupId>
					<artifactId>javafx-swing</artifactId>
					<version>17.0.2</version>
				</dependency>
				<dependency>
					<groupId>org.openjfx</groupId>
					<artifactId>javafx-web</artifactId>
					<version>17.0.2</version>
				</dependency>
			</dependencies>
		</profile>

		<profile>
			<id>xdev-ide</id>
			<build>
				<plugins>
					<plugin>

						<artifactId>maven-assembly-plugin</artifactId>
						<configuration>
							<descriptorRefs>
								<descriptorRef>jar-with-dependencies</descriptorRef>
							</descriptorRefs>
						</configuration>
						<executions>
							<execution>
								<id>make-assembly</id>
								<phase>package</phase>
								<goals>
									<goal>single</goal>
								</goals>
							</execution>
						</executions>
					</plugin>

				</plugins>
			</build>

		</profile>


		<profile>
			<id>ossrh</id>

			<distributionManagement>
				<snapshotRepository>
					<id>ossrh</id>
					<url>https://oss.sonatype.org/content/repositories/snapshots</url>
				</snapshotRepository>
				<repository>
					<id>ossrh</id>
					<url>https://oss.sonatype.org/service/local/staging/deploy/maven2/</url>
				</repository>
			</distributionManagement>

			<build>
				<plugins>
					<plugin>
						<groupId>org.apache.maven.plugins</groupId>
						<artifactId>maven-gpg-plugin</artifactId>
						<version>3.0.1</version>
						<executions>
							<execution>
								<id>sign-artifacts</id>
								<phase>verify</phase>
								<goals>
									<goal>sign</goal>
								</goals>
								<configuration>
									<!-- Fixes "gpg: signing failed: Inappropriate ioctl for device" -->
									<!-- Prevent `gpg` from using pinentry programs -->
									<gpgArguments>
										<arg>--pinentry-mode</arg>
										<arg>loopback</arg>
									</gpgArguments>
								</configuration>
							</execution>
						</executions>
					</plugin>

					<plugin>
						<groupId>org.sonatype.plugins</groupId>
						<artifactId>nexus-staging-maven-plugin</artifactId>
						<version>1.6.8</version>
						<extensions>true</extensions>
						<configuration>
							<serverId>ossrh</serverId>
							<nexusUrl>https://oss.sonatype.org/</nexusUrl>
							<!-- Sometimes OSSRH is really slow -->
							<stagingProgressTimeoutMinutes>30</stagingProgressTimeoutMinutes>
							<autoReleaseAfterClose>true</autoReleaseAfterClose>
						</configuration>
					</plugin>
				</plugins>
			</build>
		</profile>
	</profiles>

</project>
