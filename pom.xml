<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0"
         xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
    <modelVersion>4.0.0</modelVersion>

    <groupId>com.xdev-software</groupId>
    <artifactId>xapi-fx</artifactId>
    <version>6.0.3-${version.suffix}-SNAPSHOT</version>
    <packaging>jar</packaging>

    <name>XDEV Application Framework JavaFX</name>
    <description>XDEV Application Framework - the JavaFX part</description>
    <url>https://github.com/xdev-software/xapi-fx</url>

    <scm>
        <url>https://github.com/xdev-software/xapi-fx</url>
        <connection>https://github.com/xdev-software/xapi-fx.git</connection>
    </scm>

    <inceptionYear>2003</inceptionYear>

    <organization>
        <name>XDEV Software</name>
        <url>https://xdev.software</url>
    </organization>

    <developers>
        <developer>
            <name>XDEV Software</name>
            <organization>XDEV Software</organization>
            <url>https://xdev.software</url>
        </developer>
    </developers>

    <licenses>
        <license>
            <name>GNU Lesser General Public License version 3</name>
            <url>https://www.gnu.org/licenses/lgpl-3.0.en.html</url>
            <distribution>repo</distribution>
        </license>
    </licenses>

    <properties>
        <javaVersion>1.8</javaVersion>
        <maven.compiler.source>${javaVersion}</maven.compiler.source>
        <maven.compiler.target>${javaVersion}</maven.compiler.target>

        <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
        <project.reporting.outputEncoding>UTF-8</project.reporting.outputEncoding>
    </properties>

    <repositories>
        <!-- The order of definitions matters. Explicitly defining central here
            to make sure it has the highest priority. -->
        <repository>
            <id>central</id>
            <url>https://repo.maven.apache.org/maven2</url>
            <snapshots>
                <enabled>false</enabled>
            </snapshots>
        </repository>
    </repositories>


    <pluginRepositories>
        <!-- The order of definitions matters. Explicitly defining central here
            to make sure it has the highest priority. -->
        <pluginRepository>
            <id>central</id>
            <url>https://repo.maven.apache.org/maven2</url>
            <snapshots>
                <enabled>false</enabled>
            </snapshots>
        </pluginRepository>
    </pluginRepositories>

    <distributionManagement>
        <snapshotRepository>
            <id>ossrh</id>
            <url>https://oss.sonatype.org/content/repositories/snapshots</url>
        </snapshotRepository>
        <repository>
            <id>ossrh</id>
            <url>https://oss.sonatype.org/service/local/staging/deploy/maven2/</url>
        </repository>
    </distributionManagement>

    <dependencies>

    </dependencies>

    <build>
        <plugins>
            <plugin>
                <groupId>com.mycila</groupId>
                <artifactId>license-maven-plugin</artifactId>
                <version>4.1</version>
                <configuration>
                    <properties>
                        <email>${project.organization.url}</email>
                    </properties>
                    <licenseSets>
                        <licenseSet>
                            <header>com/mycila/maven/plugin/license/templates/LGPL-3.txt</header>
                            <includes>
                                <include>src/main/java/**</include>
                                <include>src/test/java/**</include>
                            </includes>
                        </licenseSet>
                    </licenseSets>
                </configuration>
                <executions>
                    <execution>
                        <id>first</id>
                        <goals>
                            <goal>format</goal>
                        </goals>
                        <phase>process-sources</phase>
                    </execution>
                </executions>
            </plugin>

            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-compiler-plugin</artifactId>
                <version>3.10.1</version>
                <configuration>
                    <source>${maven.compiler.source}</source>
                    <target>${maven.compiler.target}</target>
                    <compilerArgs>
                        <arg>-proc:none</arg>
                    </compilerArgs>
                </configuration>
            </plugin>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-javadoc-plugin</artifactId>
                <version>3.4.1</version>
                <executions>
                    <execution>
                        <id>attach-javadocs</id>
                        <phase>verify</phase>
                        <goals>
                            <goal>jar</goal>
                        </goals>
                    </execution>
                </executions>
                <configuration>
                    <quiet>true</quiet>
                    <doclint>none</doclint>
                </configuration>
            </plugin>        
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-source-plugin</artifactId>
                <version>3.2.1</version>
                <executions>
                    <execution>
                        <id>attach-sources</id>
                        <phase>verify</phase>
                        <goals>
                            <goal>jar-no-fork</goal>
                        </goals>
                    </execution>
                </executions>
            </plugin>

            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-enforcer-plugin</artifactId>
                <version>3.1.0</version>
                <executions>
                    <execution>
                        <id>enforce-maven</id>
                        <goals>
                            <goal>enforce</goal>
                        </goals>
                        <configuration>
                            <rules>
                                <requireMavenVersion>
                                    <version>3.5.4</version>
                                </requireMavenVersion>
                                <requireJavaVersion>
                                    <version>${java.runtime.version}</version>
                                </requireJavaVersion>
                                <requireActiveProfile>
                                    <profiles>java8,java11,java17</profiles>
                                    <all>false</all>
                                </requireActiveProfile>
                            </rules>
                        </configuration>
                    </execution>
                </executions>
            </plugin>

            <!--
                This is required for installing/deploying profiles with dependencies.
                Otherwise the dependencies are not resolved correctly in the implementing project
             -->
            <plugin>
                <groupId>org.codehaus.mojo</groupId>
                <artifactId>flatten-maven-plugin</artifactId>
                <version>1.4.1</version>
                <configuration>
                    <updatePomFile>true</updatePomFile>
                    <!-- This does the magic -->
                    <embedBuildProfileDependencies>true</embedBuildProfileDependencies>
                    <flattenMode>ossrh</flattenMode>
                </configuration>
                <executions>
                    <execution>
                        <id>flatten</id>
                        <phase>process-resources</phase>
                        <goals>
                            <goal>flatten</goal>
                        </goals>
                    </execution>
                    <execution>
                        <id>flatten.clean</id>
                        <phase>clean</phase>
                        <goals>
                            <goal>clean</goal>
                        </goals>
                    </execution>
                </executions>
            </plugin>
        </plugins>
    </build>
    <profiles>
        <profile>
            <id>java8</id>
            <properties>
                <java.runtime.version>[1.8,9)</java.runtime.version>
                <version.suffix>java8</version.suffix>
            </properties>

            <dependencies>
                <!-- There are no JavaFX dependencies here, because with Java8 JavaFX 
                    has to come with the JDK. There are no maven dependencies we can use. -->
            </dependencies>
        </profile>

        <profile>
            <id>java11</id>
            <properties>
                <java.runtime.version>[11,12)</java.runtime.version>
                <version.suffix>java11</version.suffix>
            </properties>

            <dependencies>
                <dependency>
                    <groupId>org.openjfx</groupId>
                    <artifactId>javafx-swing</artifactId>
                    <version>11.0.2</version>
                </dependency>
                <dependency>
                    <groupId>org.openjfx</groupId>
                    <artifactId>javafx-web</artifactId>
                    <version>11.0.2</version>
                </dependency>
            </dependencies>
        </profile>

        <profile>
            <id>java17</id>
            <properties>
                <java.runtime.version>[17,18)</java.runtime.version>
                <version.suffix>java17</version.suffix>
            </properties>

            <dependencies>
                <dependency>
                    <groupId>org.openjfx</groupId>
                    <artifactId>javafx-swing</artifactId>
                    <version>17.0.2</version>
                </dependency>
                <dependency>
                    <groupId>org.openjfx</groupId>
                    <artifactId>javafx-web</artifactId>
                    <version>17.0.2</version>
                </dependency>
            </dependencies>
        </profile>

        <profile>
            <id>ossrh</id>
            <build>
                <plugins>
                    <plugin>
                        <groupId>org.apache.maven.plugins</groupId>
                        <artifactId>maven-gpg-plugin</artifactId>
                        <version>3.0.1</version>
                        <executions>
                            <execution>
                                <id>sign-artifacts</id>
                                <phase>verify</phase>
                                <goals>
                                    <goal>sign</goal>
                                </goals>
                                <configuration>
                                    <!-- Fixes "gpg: signing failed: Inappropriate ioctl for device" -->
                                    <!-- Prevent `gpg` from using pinentry programs -->
                                    <gpgArguments>
                                        <arg>--pinentry-mode</arg>
                                        <arg>loopback</arg>
                                    </gpgArguments>
                                </configuration>
                            </execution>
                        </executions>
                    </plugin>

                    <plugin>
                        <groupId>org.sonatype.plugins</groupId>
                        <artifactId>nexus-staging-maven-plugin</artifactId>
                        <version>1.6.13</version>
                        <extensions>true</extensions>
                        <configuration>
                            <serverId>ossrh</serverId>
                            <nexusUrl>https://oss.sonatype.org/</nexusUrl>
                            <!-- Sometimes OSSRH is really slow -->
                            <stagingProgressTimeoutMinutes>30</stagingProgressTimeoutMinutes>
                            <autoReleaseAfterClose>true</autoReleaseAfterClose>
                        </configuration>
                    </plugin>
                </plugins>
            </build>
        </profile>
    </profiles>
</project>
